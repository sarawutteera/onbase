import { useCallback } from 'react';
import { useOnchainKit } from '../../useOnchainKit.js';
import { IdentityLayout } from './IdentityLayout.js';
import { IdentityProvider } from './IdentityProvider.js';
import { jsx } from 'react/jsx-runtime';
function Identity({
  address,
  chain,
  children,
  className,
  hasCopyAddressOnClick = false,
  schemaId
}) {
  const _useOnchainKit = useOnchainKit(),
    contextChain = _useOnchainKit.chain;
  const accountChain = chain ?? contextChain;
  const handleCopy = useCallback(async () => {
    if (!address) {
      return false;
    }
    try {
      await navigator.clipboard.writeText(address);
      return true;
    } catch (e) {
      console.error('Failed to copy: ', e);
      return false;
    }
  }, [address]);
  const onClick = hasCopyAddressOnClick ? handleCopy : undefined;
  return /*#__PURE__*/jsx(IdentityProvider, {
    address: address,
    schemaId: schemaId,
    chain: accountChain,
    children: /*#__PURE__*/jsx(IdentityLayout, {
      className: className,
      onClick: onClick,
      children: children
    })
  });
}
export { Identity };
//# sourceMappingURL=Identity.js.map
