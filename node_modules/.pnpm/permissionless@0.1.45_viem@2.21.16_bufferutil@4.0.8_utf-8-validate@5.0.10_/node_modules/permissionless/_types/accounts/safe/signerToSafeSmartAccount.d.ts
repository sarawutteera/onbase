import { type Address, type Chain, type Client, type PublicActions, type PublicRpcSchema, type Transport } from "viem";
import type { EntryPoint } from "../../types";
import { type SmartAccount, type SmartAccountSigner } from "../types";
export type SafeVersion = "1.4.1";
export type SafeSmartAccount<entryPoint extends EntryPoint, transport extends Transport = Transport, chain extends Chain | undefined = Chain | undefined> = SmartAccount<entryPoint, "SafeSmartAccount", transport, chain>;
type GetErc7579Params<TErc7579 extends Address | undefined> = TErc7579 extends undefined ? {
    safeModuleSetupAddress?: Address;
    multiSendAddress?: Address;
    multiSendCallOnlyAddress?: Address;
    setupTransactions?: {
        to: Address;
        data: Address;
        value: bigint;
    }[];
    safeModules?: Address[];
} : {
    validators?: {
        address: Address;
        context: Address;
    }[];
    executors?: {
        address: Address;
        context: Address;
    }[];
    fallbacks?: {
        address: Address;
        context: Address;
    }[];
    hooks?: {
        address: Address;
        context: Address;
    }[];
    attesters?: Address[];
    attestersThreshold?: number;
};
export type SignerToSafeSmartAccountParameters<entryPoint extends EntryPoint, TSource extends string = string, TAddress extends Address = Address, TErc7579 extends Address | undefined = Address | undefined> = {
    signer: SmartAccountSigner<TSource, TAddress>;
    safeVersion: SafeVersion;
    entryPoint: entryPoint;
    safe4337ModuleAddress?: Address;
    erc7569LaunchpadAddress?: Address;
    erc7579LaunchpadAddress?: TErc7579;
    safeProxyFactoryAddress?: Address;
    safeSingletonAddress?: Address;
    address?: Address;
    saltNonce?: bigint;
    validUntil?: number;
    validAfter?: number;
    nonceKey?: bigint;
    paymentToken?: Address;
    payment?: bigint;
    paymentReceiver?: Address;
} & GetErc7579Params<TErc7579>;
/**
 * @description Creates an Simple Account from a private key.
 *
 * @returns A Private Key Simple Account.
 */
export declare function signerToSafeSmartAccount<entryPoint extends EntryPoint, TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TSource extends string = string, TAddress extends Address = Address, TErc7579 extends Address | undefined = undefined>(client: Client<TTransport, TChain, undefined, PublicRpcSchema, PublicActions<TTransport, TChain>>, args: SignerToSafeSmartAccountParameters<entryPoint, TSource, TAddress, TErc7579>): Promise<SafeSmartAccount<entryPoint, TTransport, TChain>>;
export {};
//# sourceMappingURL=signerToSafeSmartAccount.d.ts.map