import { type Address, type Chain, type Client, type Hex, type Transport } from "viem";
import type { SmartAccount } from "../../accounts/types";
import type { GetAccountParameter } from "../../types";
import type { EntryPoint } from "../../types/entrypoint";
import { type ModuleType } from "./supportsModule";
export type IsModuleInstalledParameters<TEntryPoint extends EntryPoint, TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TSmartAccount extends SmartAccount<TEntryPoint, string, TTransport, TChain> | undefined = SmartAccount<TEntryPoint, string, TTransport, TChain> | undefined> = GetAccountParameter<TEntryPoint, TTransport, TChain, TSmartAccount> & {
    type: ModuleType;
    address: Address;
    context: Hex;
};
export declare function isModuleInstalled<TEntryPoint extends EntryPoint, TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TSmartAccount extends SmartAccount<TEntryPoint, string, TTransport, TChain> | undefined = SmartAccount<TEntryPoint, string, TTransport, TChain> | undefined>(client: Client<TTransport, TChain, TSmartAccount>, parameters: IsModuleInstalledParameters<TEntryPoint, TTransport, TChain, TSmartAccount>): Promise<boolean>;
//# sourceMappingURL=isModuleInstalled.d.ts.map