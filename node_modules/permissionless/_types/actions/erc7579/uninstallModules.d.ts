import { type Address, type Chain, type Client, type Hex, type Transport } from "viem";
import type { SmartAccount } from "../../accounts/types";
import type { GetAccountParameter, Prettify } from "../../types";
import type { EntryPoint } from "../../types/entrypoint";
import type { Middleware } from "../smartAccount/prepareUserOperationRequest";
import { type ModuleType } from "./supportsModule";
export type UninstallModulesParameters<TEntryPoint extends EntryPoint, TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TSmartAccount extends SmartAccount<TEntryPoint, string, TTransport, TChain> | undefined = SmartAccount<TEntryPoint, string, TTransport, TChain> | undefined> = GetAccountParameter<TEntryPoint, TTransport, TChain, TSmartAccount> & {
    modules: [
        {
            type: ModuleType;
            address: Address;
            context: Hex;
        }
    ];
    maxFeePerGas?: bigint;
    maxPriorityFeePerGas?: bigint;
    nonce?: bigint;
} & Middleware<TEntryPoint>;
export declare function uninstallModules<TEntryPoint extends EntryPoint, TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TSmartAccount extends SmartAccount<TEntryPoint, string, TTransport, TChain> | undefined = SmartAccount<TEntryPoint, string, TTransport, TChain> | undefined>(client: Client<TTransport, TChain, TSmartAccount>, parameters: Prettify<UninstallModulesParameters<TEntryPoint, TTransport, TChain, TSmartAccount>>): Promise<Hex>;
//# sourceMappingURL=uninstallModules.d.ts.map