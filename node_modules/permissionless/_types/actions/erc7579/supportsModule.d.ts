import { type Chain, type Client, type Transport } from "viem";
import type { SmartAccount } from "../../accounts/types";
import type { GetAccountParameter, Prettify } from "../../types";
import type { EntryPoint } from "../../types/entrypoint";
export type ModuleType = "validator" | "executor" | "fallback" | "hook";
export type SupportsModuleParameters<TEntryPoint extends EntryPoint, TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TSmartAccount extends SmartAccount<TEntryPoint, string, TTransport, TChain> | undefined = SmartAccount<TEntryPoint, string, TTransport, TChain> | undefined> = GetAccountParameter<TEntryPoint, TTransport, TChain, TSmartAccount> & {
    type: ModuleType;
};
export declare function parseModuleTypeId(type: ModuleType): bigint;
export declare function supportsModule<TEntryPoint extends EntryPoint, TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TSmartAccount extends SmartAccount<TEntryPoint, string, TTransport, TChain> | undefined = SmartAccount<TEntryPoint, string, TTransport, TChain> | undefined>(client: Client<TTransport, TChain, TSmartAccount>, args: Prettify<SupportsModuleParameters<TEntryPoint, TTransport, TChain, TSmartAccount>>): Promise<boolean>;
//# sourceMappingURL=supportsModule.d.ts.map